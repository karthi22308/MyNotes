->RDBMS

based on relational model of data
tables are also called as relations

RDBMS is a software that allows to do administer db

adv:
data security - support authorization encryption
retain data consistency
flex and scalability
easy mainatanence

-> ACID properties


Transaction -> single logical unit of work

begin transaction
insert// update
commit all or all fails

end transaction
atomicity - all or executed or none should be executed

consistency - data integrity constraints -- correctness of database if column is of int tyoe varchar should not be allowed

Isolation - a transactions will be executed like its the only transaction - ensuring that transaction will not be affected by concurrent transaction -- locks on table to avoid interference

Durability - changes are persisted permanently in database



---------------------------------------------------------

Normalization - process of organizing data in database in order to reduce data redundancy and improve data integrity

need for it:

Data redundancy
waste of disk space
maintanence plans


normal forms

üîπ 1st Normal Form (1NF)
Definition:

A table is in 1NF if:

It contains only atomic values (indivisible).

It has no repeating groups (no multivalued columns).

Example:

‚ùå Not in 1NF:

diff
Copy
Edit
OrderID | CustomerName | Products
--------|--------------|-------------------
101     | Alice        | Pen, Pencil
102     | Bob          | Notebook
‚úÖ Convert to 1NF:

mathematica
Copy
Edit
OrderID | CustomerName | Product
--------|--------------|---------
101     | Alice        | Pen
101     | Alice        | Pencil
102     | Bob          | Notebook
üîπ 2nd Normal Form (2NF)
Definition:

A table is in 2NF if:

It is already in 1NF.

No partial dependency exists (non-key attributes must depend on the whole primary key, not part of it).

Example:

‚ùå Not in 2NF:

yaml
Copy
Edit
OrderID | ProductID | ProductName
--------|-----------|-------------
1001    | P01       | Pen
1001    | P02       | Pencil
Here, ProductName depends only on ProductID, not the full key (OrderID, ProductID).

‚úÖ Convert to 2NF:

OrderProduct Table:

yaml
Copy
Edit
OrderID | ProductID
--------|-----------
1001    | P01
1001    | P02
Product Table:

diff
Copy
Edit
ProductID | ProductName
----------|-------------
P01       | Pen
P02       | Pencil
üîπ 3rd Normal Form (3NF)
Definition:

A table is in 3NF if:

It is in 2NF.

It has no transitive dependencies (non-key columns must depend only on the primary key).

Example:

‚ùå Not in 3NF:

diff
Copy
Edit
EmployeeID | EmployeeName | DeptID | DeptName
-----------|--------------|--------|----------
E01        | John         | D10    | HR
E02        | Alice        | D20    | IT
Here, DeptName depends on DeptID, not directly on EmployeeID.

‚úÖ Convert to 3NF:

Employee Table:

diff
Copy
Edit
EmployeeID | EmployeeName | DeptID
-----------|--------------|--------
E01        | John         | D10
E02        | Alice        | D20
Department Table:

diff
Copy
Edit
DeptID | DeptName
-------|-----------
D10    | HR
D20    | IT
Let me know if you wa
---------------------------------











